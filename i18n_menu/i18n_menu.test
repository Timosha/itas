<?php

/**
 * @file
 * Test case for multilingual menus.
 */
class i18nMenuTestCase extends Drupali18nTestCase {
  function getInfo() {
    return array(
      'name' => 'Menu translation',
      'group' => 'Internationalization',
      'description' => 'Menu translation functions',
    );
  }

  function setUp() {
    parent::setUp('i18n_menu');
    parent::setUpLanguages(array('administer menu'));
  }

  function testMenuTranslateLocalize() {
    // Test filtering for menu blocks.
    $menu = $this->createMenu(array('i18n_mode' => I18N_MODE_MULTIPLE));

    $neutral_item = $this->createMenuLink(array('menu_name' => $menu['menu_name']));
    $default_item = $this->createMenuLink(array('menu_name' => $menu['menu_name'], 'language' => $this->default_language));
    $secondary_item = $this->createMenuLink(array('menu_name' => $menu['menu_name'], 'language' => $this->secondary_language));

    $block['title'] = $menu['title'];
    $block['module'] = 'menu';
    $block['delta'] = $menu['menu_name'];
    $this->moveBlockToRegion($block, 'sidebar_first');

    $this->drupalGet('');
    $this->assertText($neutral_item['link_title']);
    $this->assertText($default_item['link_title']);
    $this->assertNoText($secondary_item['link_title']);

    $this->drupalGet($this->secondary_language);
    $this->assertText($neutral_item['link_title']);
    $this->assertNoText($default_item['link_title']);
    $this->assertText($secondary_item['link_title']);

    // Test filtering for built-in menus.
    $edit = array(
      'i18n_mode' => I18N_MODE_MULTIPLE,
    );
    $this->drupalPost('admin/structure/menu/manage/main-menu/edit', $edit, t('Save'));

    $neutral_item = $this->createMenuLink(array('menu_name' => 'main-menu'));
    $default_item = $this->createMenuLink(array('menu_name' => 'main-menu', 'language' => $this->default_language));
    $secondary_item = $this->createMenuLink(array('menu_name' => 'main-menu', 'language' => $this->secondary_language));

    $this->drupalGet('');
    $this->assertText($neutral_item['link_title']);
    $this->assertText($default_item['link_title']);
    $this->assertNoText($secondary_item['link_title']);

    $this->drupalGet($this->secondary_language);
    $this->assertText($neutral_item['link_title']);
    $this->assertNoText($default_item['link_title']);
    $this->assertText($secondary_item['link_title']);
  }

  /**
   * Helper function to create a menu.
   */
  function createMenu($edit = array()) {
    $edit += array(
      'title' => $this->randomName(),
      'menu_name' => substr(hash('sha256', $this->randomName(16)), 0, MENU_MAX_MENU_NAME_LENGTH_UI),
      'language' => $this->secondary_language,
    );
    $this->drupalPost('admin/structure/menu/add', $edit, t('Save'));

    return menu_load('menu-' . $edit['menu_name']);
  }

  /**
   * Helper function to create a menu link.
   */
  function createMenuLink($item = array()) {
    $item += array(
      'link_title' => $this->randomName(),
      'link_path' => '<front>',
      'customized' => TRUE,
    );

    return menu_link_load(menu_link_save($item));
  }
}
